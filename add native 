// Add native HTTPS with rustls to main.rs
use actix_web::{App, HttpServer};
use actix_web::middleware::Logger;
use std::fs::File;
use std::io::BufReader;
use rustls::{Certificate, PrivateKey, ServerConfig};
use rustls_pemfile::{certs, pkcs8_private_keys};
use std::sync::Arc;

fn load_tls_config() -> ServerConfig {
    let cert_file = &mut BufReader::new(File::open("cert.pem").unwrap());
    let key_file = &mut BufReader::new(File::open("key.pem").unwrap());

    let cert_chain = certs(cert_file).unwrap()
        .into_iter()
        .map(Certificate)
        .collect();

    let mut keys = pkcs8_private_keys(key_file).unwrap();
    let key = PrivateKey(keys.remove(0));

    ServerConfig::builder()
        .with_safe_defaults()
        .with_no_client_auth()
        .with_single_cert(cert_chain, key)
        .expect("invalid certificate or key")
}

#[actix_web::main]
async fn main() -> std::io::Result<()> {
    std::env::set_var("RUST_LOG", "actix_web=info");
    env_logger::init();
    let config = load_tls_config();

    HttpServer::new(|| {
        App::new()
            .wrap(Logger::default())
            .service(crate::web_interface::status)
            .service(crate::web_interface::dashboard_page)
            .service(crate::web_interface::token_endpoint)
    })
    .bind_rustls("0.0.0.0:8443", config)?
    .run()
    .await
}

// Add to Cargo.toml:
# TLS Support
rustls = "0.23"
rustls-pemfile = "2"

// Generate self-signed certs (development only):
// openssl req -x509 -nodes -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 \
//   -subj "/C=US/ST=CA/L=SF/O=Example/CN=localhost"


âœ… Native HTTPS via rustls is now integrated.

To deploy it:


---

ðŸš€ Local HTTPS Deployment Steps

1. Generate self-signed TLS certs (for testing):



openssl req -x509 -nodes -newkey rsa:4096 \
  -keyout key.pem -out cert.pem -days 365 \
  -subj "/C=US/ST=CA/L=SF/O=Example/CN=localhost"

2. Build and run your server:



cargo build --release
./target/release/your_project_binary

3. Access your dashboard securely:



https://localhost:8443/dashboard

Use your token via browser headers or curl.


---



